name: Generate Documentation

on:
  push:
    branches: [ main ]  # or your default branch name
    paths:
      - '**/*.py'  # Only trigger on Python file changes
  pull_request:
    branches: [ main ]
    paths:
      - '**/*.py'

jobs:
  generate-docs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install python-docx
    
    - name: Generate documentation
      run: |
        # Create docs directory if it doesn't exist
        mkdir -p docs
        
        # Run the documentation generator
        python -m code_explainer.cli . --recursive -o docs/code_documentation.docx
        
        # Check if documentation was generated
        if [ -f "docs/code_documentation.docx" ]; then
          echo "Documentation generated successfully!"
        else
          echo "Error: Documentation was not generated"
          exit 1
        fi
    
    - name: Upload documentation artifact
      uses: actions/upload-artifact@v4
      with:
        name: code-documentation
        path: docs/code_documentation.docx
        retention-days: 5
    
    - name: Commit and push documentation
      run: |
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        
        # Only commit if there are changes
        git add docs/code_documentation.docx
        git diff --quiet && git diff --staged --quiet || \
          (git commit -m "docs: auto-generate code documentation" && \
           git push) || \
          echo "No changes to commit"
