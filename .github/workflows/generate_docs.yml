name: Generate Documentation

on:
  push:
    branches: [main]
    paths:
      - '**/*.py'
  pull_request:
    branches: [main]
    paths:
      - '**/*.py'

jobs:
  generate-docs:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: ${{ runner.os }}-pip-

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install python-docx

    - name: Generate documentation
      run: |
        mkdir -p docs
        python -m code_explainer.cli . --recursive -o docs/code_documentation.docx

        if [ -f "docs/code_documentation.docx" ]; then
          echo "Documentation generated successfully!"
        else
          echo "Error: Documentation was not generated"
          exit 1
        fi

    - name: Upload documentation artifact
      uses: actions/upload-artifact@v4
      with:
        name: code-documentation
        path: docs/code_documentation.docx
        retention-days: 5

    # Optional: Commit generated docs ONLY on push, not pull_request
    - name: Commit and push documentation
      if: github.event_name == 'push'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
        git add docs/code_documentation.docx

        # Avoid infinite loops by skipping if commit message matches
        git status
        if git diff --cached --quiet; then
          echo "No changes to commit"
        else
          git commit -m "docs: auto-generate code documentation [skip ci]"
          git push "https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" HEAD:${GITHUB_REF##*/}"
        fi
